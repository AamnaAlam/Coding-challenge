Question:
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.
Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]
 

Constraints:

n == nums.length
1 <= n <= 300
nums[i] is either 0, 1, or 2.


ANSWERS:
class Solution {
    public void sortColors(int[] nums) {
        int z=0,o=0,t=0;
        for(int x=0;x<nums.length;x++)
        {
            if(nums[x]==0)
                z++;
            else if(nums[x]==1)
                o++;
            else if(nums[x]==2)
                t++;
            else
                break;
        }
        for(int y=0;y<z;y++)
        {
            nums[y]=0;
        }
        for(int m=z;m<(z+o);m++)
        {
            nums[m]=1;
        }
        for(int m=z+o;m<(z+o+t);m++)
        {
            nums[m]=2;
        }
          for(int b=0;b<nums.length;b++)
          {
              System.out.println(nums[b]);
          }
        //return 1;
        }
    }
